<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.henu.dao.CommentMapper">
    <resultMap id="BaseResultMap" type="cn.henu.pojo.Comment">
        <id column="comment_id" property="commentId" jdbcType="INTEGER"/>
        <result column="article_id" property="articleId" jdbcType="INTEGER"/>
        <result column="comment_name" property="commentName" jdbcType="VARCHAR"/>
        <result column="comment_qq" property="commentQq" jdbcType="VARCHAR"/>
        <result column="comment_content" property="commentContent" jdbcType="VARCHAR"/>
        <result column="comment_head" property="commentHead" jdbcType="VARCHAR"/>
        <result column="comment_ip" property="commentIp" jdbcType="VARCHAR"/>
        <result column="comment_create_time" property="commentCreateTime" jdbcType="TIMESTAMP"/>
        <result column="parent_id" property="parentId" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        comment_id, article_id, comment_name, comment_qq, comment_content, comment_head,
        comment_ip, comment_create_time, parent_id
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.henu.pojo.CommentExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </select>
    <select id="findAllComment" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from comment
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete from comment
        where comment_id = #{commentId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="cn.henu.pojo.CommentExample">
        delete from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="cn.henu.pojo.Comment">
        insert into comment (comment_id, article_id, comment_name,
        comment_qq, comment_content, comment_head,
        comment_ip, comment_create_time, parent_id
        )
        values (#{commentId,jdbcType=INTEGER}, #{articleId,jdbcType=INTEGER}, #{commentName,jdbcType=VARCHAR},
        #{commentQq,jdbcType=VARCHAR}, #{commentContent,jdbcType=VARCHAR}, #{commentHead,jdbcType=VARCHAR},
        #{commentIp,jdbcType=VARCHAR}, #{commentCreateTime,jdbcType=TIMESTAMP}, #{parentId,jdbcType=INTEGER}
        )
    </insert>
    <insert id="insertSelective" parameterType="cn.henu.pojo.Comment">
        insert into comment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                comment_id,
            </if>
            <if test="articleId != null">
                article_id,
            </if>
            <if test="commentName != null">
                comment_name,
            </if>
            <if test="commentQq != null">
                comment_qq,
            </if>
            <if test="commentContent != null">
                comment_content,
            </if>
            <if test="commentHead != null">
                comment_head,
            </if>
            <if test="commentIp != null">
                comment_ip,
            </if>
            <if test="commentCreateTime != null">
                comment_create_time,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="commentId != null">
                #{commentId,jdbcType=INTEGER},
            </if>
            <if test="articleId != null">
                #{articleId,jdbcType=INTEGER},
            </if>
            <if test="commentName != null">
                #{commentName,jdbcType=VARCHAR},
            </if>
            <if test="commentQq != null">
                #{commentQq,jdbcType=VARCHAR},
            </if>
            <if test="commentContent != null">
                #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="commentHead != null">
                #{commentHead,jdbcType=VARCHAR},
            </if>
            <if test="commentIp != null">
                #{commentIp,jdbcType=VARCHAR},
            </if>
            <if test="commentCreateTime != null">
                #{commentCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="cn.henu.pojo.CommentExample" resultType="java.lang.Integer">
        select count(*) from comment
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update comment
        <set>
            <if test="record.commentId != null">
                comment_id = #{record.commentId,jdbcType=INTEGER},
            </if>
            <if test="record.articleId != null">
                article_id = #{record.articleId,jdbcType=INTEGER},
            </if>
            <if test="record.commentName != null">
                comment_name = #{record.commentName,jdbcType=VARCHAR},
            </if>
            <if test="record.commentQq != null">
                comment_qq = #{record.commentQq,jdbcType=VARCHAR},
            </if>
            <if test="record.commentContent != null">
                comment_content = #{record.commentContent,jdbcType=VARCHAR},
            </if>
            <if test="record.commentHead != null">
                comment_head = #{record.commentHead,jdbcType=VARCHAR},
            </if>
            <if test="record.commentIp != null">
                comment_ip = #{record.commentIp,jdbcType=VARCHAR},
            </if>
            <if test="record.commentCreateTime != null">
                comment_create_time = #{record.commentCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.parentId != null">
                parent_id = #{record.parentId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update comment
        set comment_id = #{record.commentId,jdbcType=INTEGER},
        article_id = #{record.articleId,jdbcType=INTEGER},
        comment_name = #{record.commentName,jdbcType=VARCHAR},
        comment_qq = #{record.commentQq,jdbcType=VARCHAR},
        comment_content = #{record.commentContent,jdbcType=VARCHAR},
        comment_head = #{record.commentHead,jdbcType=VARCHAR},
        comment_ip = #{record.commentIp,jdbcType=VARCHAR},
        comment_create_time = #{record.commentCreateTime,jdbcType=TIMESTAMP},
        parent_id = #{record.parentId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="cn.henu.pojo.Comment">
        update comment
        <set>
            <if test="articleId != null">
                article_id = #{articleId,jdbcType=INTEGER},
            </if>
            <if test="commentName != null">
                comment_name = #{commentName,jdbcType=VARCHAR},
            </if>
            <if test="commentQq != null">
                comment_qq = #{commentQq,jdbcType=VARCHAR},
            </if>
            <if test="commentContent != null">
                comment_content = #{commentContent,jdbcType=VARCHAR},
            </if>
            <if test="commentHead != null">
                comment_head = #{commentHead,jdbcType=VARCHAR},
            </if>
            <if test="commentIp != null">
                comment_ip = #{commentIp,jdbcType=VARCHAR},
            </if>
            <if test="commentCreateTime != null">
                comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=INTEGER},
            </if>
        </set>
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="cn.henu.pojo.Comment">
        update comment
        set article_id = #{articleId,jdbcType=INTEGER},
        comment_name = #{commentName,jdbcType=VARCHAR},
        comment_qq = #{commentQq,jdbcType=VARCHAR},
        comment_content = #{commentContent,jdbcType=VARCHAR},
        comment_head = #{commentHead,jdbcType=VARCHAR},
        comment_ip = #{commentIp,jdbcType=VARCHAR},
        comment_create_time = #{commentCreateTime,jdbcType=TIMESTAMP},
        parent_id = #{parentId,jdbcType=INTEGER}
        where comment_id = #{commentId,jdbcType=INTEGER}
    </update>
</mapper>